{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.unshift.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.timers.js\";\nexport default {\n  data: function data() {\n    return {\n      memberList: [\n        // { name: '蓝队队长', type: 'default', id: 'blueLeader',},\n        // { name: '红队队长', type: 'danger', id: 'redLeader' },\n        // { name: '成员3', type: 'info', id: 3 },\n        // { name: '成员4', type: 'info', id: 4 },\n        // { name: '成员5', type: 'info', id: 5 },\n        // { name: '成员6', type: 'info', id: 6 },\n        // { name: '成员7', type: 'info', id: 7 },\n        // { name: '成员8', type: 'info', id: 8 },\n        // { name: '成员9', type: 'info', id: 9 },\n        // { name: '成员10', type: 'info', id: 10 },\n      ],\n      menberName: '',\n      inputVisible: false,\n      inputValue: '',\n      blueTeam: [],\n      redTeam: [],\n      currentTeamType: '',\n      teamLeader: '蓝队',\n      showName: '',\n      timerId: null,\n      flag: true,\n      time: 10,\n      currentIndex: 0,\n      bluePopoverVisible: false,\n      redPopoverVisible: false,\n      isShowDialog: false,\n      currentLabel: 1\n    };\n  },\n  computed: {\n    filterList: function filterList() {\n      return this.memberList.filter(function (item) {\n        return item.type === 'info';\n      });\n    }\n  },\n  methods: {\n    chooseLabel: function chooseLabel(type) {\n      var index = -1;\n      if (type === 1) {\n        index = this.memberList.findIndex(function (item) {\n          return item.id === 'blueLeader';\n        });\n      } else if (type === 2) {\n        index = this.memberList.findIndex(function (item) {\n          return item.id === 'redLeader';\n        });\n      }\n      if (index !== -1) return;\n      this.currentLabel = type;\n    },\n    appendMember: function appendMember() {\n      this.memberList.push({\n        name: this.menberName,\n        type: this.currentLabel === 1 ? 'default' : this.currentLabel === 2 ? 'danger' : 'info',\n        id: this.currentLabel === 1 ? 'blueLeader' : this.currentLabel === 2 ? 'redLeader' : this.memberList && this.memberList.length ? this.memberList[this.memberList.length - 1].id + 1 : 1\n      });\n      if (this.currentLabel === 1) {\n        this.blueTeam.unshift({\n          name: this.menberName,\n          type: 'default',\n          id: 'blueLeader'\n        });\n        if (this.redTeam.findIndex(function (item) {\n          return item.id === 'redLeader';\n        }) === -1) {\n          this.currentLabel = 2;\n        } else {\n          this.currentLabel = 3;\n        }\n      } else if (this.currentLabel === 2) {\n        this.redTeam.unshift({\n          name: this.menberName,\n          type: 'danger',\n          id: 'redLeader'\n        });\n        if (this.blueTeam.findIndex(function (item) {\n          return item.id === 'blueLeader';\n        }) === -1) {\n          this.currentLabel = 1;\n        } else {\n          this.currentLabel = 3;\n        }\n      }\n      this.$message.success(\"\\u961F\\u5458 \".concat(this.menberName, \" \\u6DFB\\u52A0\\u6210\\u529F\"));\n      this.menberName = '';\n    },\n    clearMember: function clearMember(tag, index) {\n      this.$message.success(\"\\u4F60\\u79FB\\u9664\\u4E86\\u961F\\u5458 \".concat(tag.name));\n      this.memberList.splice(index, 1);\n      if (!tag.type || tag.type === 'default') {\n        console.log(this.blueTeam.findIndex(function (blue) {\n          return blue.id === tag.id;\n        }));\n        this.blueTeam.splice(this.blueTeam.findIndex(function (blue) {\n          return blue.id === tag.id;\n        }), 1);\n      } else if (tag.type === 'danger') {\n        this.redTeam.splice(this.redTeam.findIndex(function (red) {\n          return red.id === tag.id;\n        }), 1);\n      }\n    },\n    handleSelect: function handleSelect(member, teamType) {\n      if (!member) return;\n      if (teamType === 'blue') {\n        this.blueTeam.push({\n          name: member.name,\n          type: teamType,\n          id: member.id\n        });\n      } else if (teamType === 'red') {\n        this.redTeam.push({\n          name: member.name,\n          type: teamType,\n          id: member.id\n        });\n      }\n      this.memberList.forEach(function (item) {\n        if (item.name === member.name) {\n          item.type = teamType === 'blue' ? 'default' : 'danger';\n        }\n      });\n      this.$message.success('作弊成功');\n    },\n    refresh: function refresh() {\n      var blueIndex = this.memberList.findIndex(function (item) {\n        return item.id === 'blueLeader';\n      });\n      var redIndex = this.memberList.findIndex(function (item) {\n        return item.id === 'redLeader';\n      });\n      this.blueTeam = [{\n        name: this.memberList[blueIndex].name,\n        type: 'default',\n        id: 'blueLeader'\n      }];\n      this.redTeam = [{\n        name: this.memberList[redIndex].name,\n        type: 'default',\n        id: 'blueLeader'\n      }];\n      this.memberList.forEach(function (item) {\n        if (item.id !== 'blueLeader' && item.id !== 'redLeader') {\n          item.type = 'info';\n        }\n      });\n      this.$message.success('如果能重来，那我就重来');\n    },\n    start: function start(teamType) {\n      var _this = this;\n      if (!this.flag) return;\n      if (this.isShowDialog) return;\n      if (this.memberList.filter(function (item) {\n        return item.type === 'info';\n      }).length === 0) {\n        this.$message.warning('没人了，别抽了');\n        return;\n      }\n      var t = 2000;\n      if (this.memberList.filter(function (item) {\n        return item.type === 'info';\n      }).length === 1) t = 500;\n      this.currentTeamType = teamType;\n      this.flag = false;\n      var _fn = function fn() {\n        // 随机数\n        // random() 生成 0 ~ 1 的随机数, 左闭右开\n        var ReMembers = _this.memberList.filter(function (item) {\n          return item.type === 'info';\n        });\n        var random = parseInt(Math.random() * ReMembers.length);\n        // 3. 随机修改页面上显示的名字\n        _this.showName = ReMembers[random].name;\n        // 做完任务后, 再开启定时器\n        _this.timerId = setTimeout(_fn, _this.time);\n      };\n      this.timerId = setTimeout(_fn, this.time);\n\n      // 同时开启一个延时定时器, 3 秒后清除上面的定时器\n      setTimeout(function () {\n        // this. 除了可以访问 data 中的属性, 也可以访问 methods 中定义的方法\n        _this.stop(teamType, t);\n      }, t);\n    },\n    stop: function stop(teamType, t) {\n      var _this2 = this;\n      // 迷惑用户的, 让速度变慢\n      var slowId = setInterval(function () {\n        _this2.time += 20;\n      }, 200);\n      // 这里是直接停下\n      setTimeout(function () {\n        _this2.flag = true;\n        clearInterval(_this2.timerId);\n        // 彻底停下时, 还需要清除刚刚开启的修改 time 的定时器\n        clearInterval(slowId);\n        // 还需要将 time 还原成 10\n        _this2.time = 10;\n\n        // 为全部成员添加状态 '' 为蓝队，  'danger' 为红队\n        _this2.memberList.forEach(function (item) {\n          if (item.name === _this2.showName) {\n            item.type = teamType === 'blue' ? '' : 'danger';\n            if (teamType === 'blue') {\n              _this2.blueTeam.push({\n                name: item.name,\n                type: teamType,\n                id: item.id\n              });\n            } else if (teamType === 'red') {\n              _this2.redTeam.push({\n                name: item.name,\n                type: teamType,\n                id: item.id\n              });\n            }\n          }\n        });\n        _this2.isShowDialog = true;\n        setTimeout(function () {\n          _this2.isShowDialog = false;\n        }, 3000);\n      }, t);\n    }\n  }\n};","map":{"version":3,"names":["data","memberList","menberName","inputVisible","inputValue","blueTeam","redTeam","currentTeamType","teamLeader","showName","timerId","flag","time","currentIndex","bluePopoverVisible","redPopoverVisible","isShowDialog","currentLabel","computed","filterList","filter","item","type","methods","chooseLabel","index","findIndex","id","appendMember","push","name","length","unshift","$message","success","concat","clearMember","tag","splice","console","log","blue","red","handleSelect","member","teamType","forEach","refresh","blueIndex","redIndex","start","_this","warning","t","fn","ReMembers","random","parseInt","Math","setTimeout","stop","_this2","slowId","setInterval","clearInterval"],"sources":["src/modules/wzry/gashapon-machine.vue"],"sourcesContent":["<template>\n    <div class=\"draw-lots-page\">\n        <div class=\"gashapon-machine\">\n            <div class=\"title\">抽签小助手</div>\n            <!-- <div> -->\n            <!-- <el-button type=\"primary\" size=\"small\">点击添加成员</el-button> -->\n            <!-- </div> -->\n            <div class=\"container-comm member-add\">\n                <div :class=\"{'label-active': currentLabel === 1 }\" class=\"container-label blue-leader\" @click=\"chooseLabel(1)\">蓝队队长</div>\n                <div :class=\"{'label-active': currentLabel === 2 }\" class=\"container-label red-leader\" @click=\"chooseLabel(2)\">红队队长</div>\n                <div :class=\"{'label-active': currentLabel === 3 }\" class=\"container-label common\" @click=\"chooseLabel(3)\">添加成员</div>\n                <div class=\"member-input\">\n                    <el-input v-model=\"menberName\" style=\"margin-right: 10px;\"></el-input>\n                    <el-button type=\"primary\" style=\"width: 80px;\" size=\"small\" @click=\"appendMember\"\n                        :disabled=\"!menberName\">添加</el-button>\n                </div>\n            </div>\n            <div class=\"container-comm member-list\">\n                <div class=\"container-label\">全部成员</div>\n                <div class=\"member-tag\">\n                    <el-tag v-for=\"(tag, index) in memberList\" :key=\"tag.id\" :closable=\"true\" :type=\"tag.type\" :title=\"tag.name\"\n                        @close=\"clearMember(tag,index)\">\n                        {{ tag.name }}\n                    </el-tag>\n                </div>\n            </div>\n            <div class=\"gashapon-machine-allocation\">\n                <div class=\"team blue-team\">\n                    <div class=\"team-label\">蓝队</div>\n                    <div class=\"team-content blue-team-content\" v-for=\"(blue, blueIndex) in blueTeam\" :key=\"blueIndex\">\n                        <div class=\"team-member blue-team-member\" :title=\"blue.name\">\n                            <span>{{ blue.name || '待定' }}</span>\n                            <i class=\"el-icon-s-flag\" title=\"队长\" v-if=\"blue.id === 'blueLeader'\"></i>\n                        </div>\n                    </div>\n                    <el-popover placement=\"right\" title=\"手动添加成员\" width=\"400\" trigger=\"click\" v-model=\"bluePopoverVisible\">\n                        <div class=\"hand-select\">\n                            <div class=\"hand-select-content\">\n                                <div class=\"hand-select-member hand-blue\" :class=\"{ 'hand-active': currentIndex === index }\"\n                                    v-for=\"(member, index) in filterList\" :key=\"member.id\" @click=\"currentIndex = index\">\n                                    {{ member.name }}\n                                </div>\n                            </div>\n                            <div style=\"text-align:right\">\n                                <el-button type=\"primary\" plain size=\"mini\" @click=\"bluePopoverVisible = false\">取消</el-button>\n                                <el-button type=\"primary\" size=\"mini\" @click=\"handleSelect(filterList[currentIndex], 'blue');bluePopoverVisible = false\">确定</el-button>\n                            </div>\n                        </div>\n                        <i class=\"el-icon-thumb hand\" slot=\"reference\" title=\"手动添加成员\"></i>\n                    </el-popover>\n                </div>\n                <div class=\"draw-block\">\n                    <div style=\"text-align:center\">\n                    </div>\n                    <img src=\"../../assets/img/dog.gif\" @click=\"refresh\" title=\"点击重置队伍\">\n                    <div>幸运儿</div>\n                    <div class=\"lucky-dom\" :style=\"{ 'color': currentTeamType === 'blue' ? '#3387F3': currentTeamType === 'red' ? '#E84D4D' : ''}\">{{ showName || '会是谁呢？' }}</div>\n                    <div class=\"draw-block-btn\">\n                        <div class=\"draw-block-btn-blue\" @click=\"start('blue')\">获取蓝队</div>\n                        <div class=\"draw-block-btn-red\" @click=\"start('red')\">获取红队</div>\n                    </div>\n                </div>\n                <div class=\"team red-team\">\n                    <div class=\"team-label\">红队</div>\n                    <div class=\"team-content blue-team-content\" v-for=\"(red, redIndex) in redTeam\" :key=\"redIndex\">\n                        <div class=\"team-member blue-team-member\" :title=\"red.name\">\n                            <span>{{ red.name || '待定' }}</span>\n                            <i class=\"el-icon-s-flag\" title=\"队长\" v-if=\"red.id === 'redLeader'\"></i>\n                        </div>\n                    </div>\n\n                    <el-popover placement=\"left\" title=\"手动添加成员\" width=\"400\" trigger=\"click\" v-model=\"redPopoverVisible\">\n                        <div class=\"hand-select\">\n                            <div class=\"hand-select-content\">\n                                <div class=\"hand-select-member hand-red\" :class=\"{ 'hand-active': currentIndex === index }\"\n                                    v-for=\"(member, index) in filterList\" :key=\"member.id\" @click=\"currentIndex = index\">\n                                    {{ member.name }}\n                                </div>\n                            </div>\n                            <div style=\"text-align:right\">\n                                <el-button type=\"primary\" plain size=\"mini\" @click=\"redPopoverVisible = false\">取消</el-button>\n                                <el-button type=\"primary\" size=\"mini\" @click=\"handleSelect(filterList[currentIndex], 'red');redPopoverVisible = false\">确定</el-button>\n                            </div>\n                        </div>\n                        <i class=\"el-icon-thumb hand\" slot=\"reference\" title=\"手动添加成员\"></i>\n                    </el-popover>\n                </div>\n            </div>\n            <div class=\"draw-dialog\" v-if=\"isShowDialog\">\n                <audio src=\"../../assets/mp3/dog.mp3\" controls autoplay></audio>\n                <div class=\"draw-box\" v-for=\"item in 9\" :key=\"item\">\n                    <div style=\"width: 150px;height: 100px;text-align: center;font-size: 20px;\" v-if=\"item === 5\">\n                        <p>恭喜你这个B</p>\n                        <p>抽到了</p>\n                        <p style=\"color: lightcoral;\">{{ showName }}</p>\n                        <p>这个帅比！</p>\n                    </div>\n                    <img src=\"../../assets/img/yeah.gif\" alt=\"\" style=\"width: 100px;height: 100px;\" v-else>\n                </div>\n            </div>\n        </div>\n        \n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            memberList: [\n                // { name: '蓝队队长', type: 'default', id: 'blueLeader',},\n                // { name: '红队队长', type: 'danger', id: 'redLeader' },\n                // { name: '成员3', type: 'info', id: 3 },\n                // { name: '成员4', type: 'info', id: 4 },\n                // { name: '成员5', type: 'info', id: 5 },\n                // { name: '成员6', type: 'info', id: 6 },\n                // { name: '成员7', type: 'info', id: 7 },\n                // { name: '成员8', type: 'info', id: 8 },\n                // { name: '成员9', type: 'info', id: 9 },\n                // { name: '成员10', type: 'info', id: 10 },\n            ],\n            menberName: '',\n            inputVisible: false,\n            inputValue: '',\n            blueTeam: [],\n            redTeam: [],\n            currentTeamType: '',\n            teamLeader: '蓝队',\n            showName: '',\n            timerId: null,\n            flag: true,\n            time: 10,\n            currentIndex: 0,\n            bluePopoverVisible: false,\n            redPopoverVisible: false,\n            isShowDialog: false,\n            currentLabel: 1,\n        };\n    },\n    computed: {\n        filterList() {\n            return this.memberList.filter(item => {\n                return item.type === 'info'\n            })\n        }\n    },\n    methods: {\n        chooseLabel(type){\n            let index = -1\n            if(type === 1){\n                index = this.memberList.findIndex( item => {\n                    return item.id === 'blueLeader'\n                })\n            }else if(type === 2){\n                index = this.memberList.findIndex( item => {\n                    return item.id === 'redLeader'\n                })\n            }\n            if(index !== -1) return\n            this.currentLabel = type\n        },\n        appendMember() {\n            this.memberList.push({\n                name: this.menberName,\n                type: this.currentLabel === 1 ? 'default' : this.currentLabel === 2 ? 'danger' : 'info',\n                id: this.currentLabel === 1 ? 'blueLeader' : this.currentLabel === 2 ? 'redLeader' : this.memberList && this.memberList.length ? this.memberList[this.memberList.length -1].id + 1 : 1\n            })\n            if(this.currentLabel === 1){\n                this.blueTeam.unshift({\n                    name: this.menberName,\n                    type: 'default',\n                    id: 'blueLeader'\n                })\n                if(this.redTeam.findIndex(item => item.id === 'redLeader') === -1 ){\n                    this.currentLabel = 2\n                }else{\n                    this.currentLabel = 3\n                }\n            }else if(this.currentLabel === 2){\n                this.redTeam.unshift({\n                    name: this.menberName,\n                    type: 'danger',\n                    id: 'redLeader'\n                })\n                if(this.blueTeam.findIndex(item => item.id === 'blueLeader') === -1 ){\n                    this.currentLabel = 1\n                }else{\n                    this.currentLabel = 3\n                }\n            }\n            this.$message.success(`队员 ${this.menberName} 添加成功`)\n            this.menberName = ''\n        },\n        clearMember(tag, index) {\n            this.$message.success(`你移除了队员 ${tag.name}`)\n            this.memberList.splice(index, 1);\n            if(!tag.type || tag.type === 'default'){\n                console.log(this.blueTeam.findIndex(blue => blue.id === tag.id));\n                this.blueTeam.splice(this.blueTeam.findIndex(blue => blue.id === tag.id),1)\n            }else if( tag.type === 'danger'){\n                this.redTeam.splice(this.redTeam.findIndex(red => red.id === tag.id),1)\n            }\n        },\n        handleSelect(member, teamType) {\n            if(!member) return\n            if (teamType === 'blue') {\n                this.blueTeam.push({\n                    name: member.name,\n                    type: teamType,\n                    id: member.id\n                })\n            }else if(teamType === 'red'){\n                this.redTeam.push({\n                    name: member.name,\n                    type: teamType,\n                    id: member.id\n                })\n            }\n            this.memberList.forEach( item => {\n                if( item.name === member.name){\n                    item.type = teamType === 'blue' ? 'default' : 'danger'\n                }\n            })\n            this.$message.success('作弊成功')\n        },\n        refresh(){\n            let blueIndex = this.memberList.findIndex(item => {\n                return item.id === 'blueLeader'\n            } )\n            let redIndex = this.memberList.findIndex(item => {\n                return item.id === 'redLeader'\n            } )\n            this.blueTeam = [\n                {\n                    name: this.memberList[blueIndex].name,\n                    type: 'default',\n                    id: 'blueLeader'\n                }\n            ]\n            this.redTeam = [\n                {\n                    name: this.memberList[redIndex].name,\n                    type: 'default',\n                    id: 'blueLeader'\n                }\n            ]\n            this.memberList.forEach( item => {\n                if( item.id !== 'blueLeader' && item.id !== 'redLeader'){\n                    item.type = 'info'\n                }\n            })\n            this.$message.success('如果能重来，那我就重来')\n        },\n        start(teamType) {\n            if (!this.flag) return\n            if(this.isShowDialog) return\n            if(this.memberList.filter(item => item.type === 'info').length === 0){\n                this.$message.warning('没人了，别抽了')\n                return\n            }\n            let t = 2000\n            if(this.memberList.filter(item => item.type === 'info').length === 1) t = 500\n            this.currentTeamType = teamType\n            this.flag = false\n            const fn = () => {\n                // 随机数\n                // random() 生成 0 ~ 1 的随机数, 左闭右开\n                const ReMembers = this.memberList.filter(item => item.type === 'info')\n                const random = parseInt(Math.random() * ReMembers.length)\n                // 3. 随机修改页面上显示的名字\n                this.showName = ReMembers[random].name\n                // 做完任务后, 再开启定时器\n                this.timerId = setTimeout(fn, this.time)\n            }\n            this.timerId = setTimeout(fn, this.time)\n\n            // 同时开启一个延时定时器, 3 秒后清除上面的定时器\n            setTimeout(() => {\n                // this. 除了可以访问 data 中的属性, 也可以访问 methods 中定义的方法\n                this.stop(teamType,t)\n            }, t)\n        },\n        stop(teamType, t) {\n            // 迷惑用户的, 让速度变慢\n            let slowId = setInterval(() => {\n                this.time += 20\n            }, 200)\n            // 这里是直接停下\n            setTimeout(() => {\n                this.flag = true\n                clearInterval(this.timerId)\n                // 彻底停下时, 还需要清除刚刚开启的修改 time 的定时器\n                clearInterval(slowId)\n                // 还需要将 time 还原成 10\n                this.time = 10\n\n                // 为全部成员添加状态 '' 为蓝队，  'danger' 为红队\n                this.memberList.forEach(item => {\n                    if (item.name === this.showName) {\n                        item.type = teamType === 'blue' ? '' : 'danger'\n                        if (teamType === 'blue') {\n                            this.blueTeam.push({\n                                name: item.name,\n                                type: teamType,\n                                id: item.id\n                            })\n                        } else if (teamType === 'red') {\n                            this.redTeam.push({\n                                name: item.name,\n                                type: teamType,\n                                id: item.id\n                            })\n                        }\n                    }\n                })\n                this.isShowDialog = true\n                setTimeout(() => {\n                    this.isShowDialog = false\n                },3000)\n            }, t)\n        },\n    }\n}\n</script>\n\n<style scoped lang=\"less\">\n.draw-lots-page {\n    position: relative;\n    height: 100%;\n    padding: 10px;\n\n    .gashapon-machine {\n        display: flex;\n        flex-direction: column;\n        position: absolute;\n        left: 50%;\n        top: 0;\n        transform: translateX(-50%);\n        width: 600px;\n        height: 700px;\n        padding: 10px;\n        border: 1px solid #3387F3;\n        border-radius: 8px;\n\n        .title {\n            text-align: center;\n        }\n\n        .container-comm {\n            position: relative;\n            display: flex;\n            border: 1px solid #3387F3;\n            border-radius: 0 4px 4px 4px;\n            margin-top: 40px;\n            padding: 10px;\n\n            .container-label {\n                position: absolute;\n                top: -28px;\n                left: -1px;\n                width: 80px;\n                // height: 30px;\n                font-size: 14px;\n                background-color: #3387F3;\n                padding: 4px;\n                color: #fff;\n                text-align: center;\n                border-radius: 4px 4px 0 0;\n                cursor: pointer;\n            }\n            .blue-leader {\n                left: -1px;\n                background-color: #3387F3;\n                opacity: .3;\n            }\n            .red-leader {\n                left: 100px;\n                background-color: #E84D4D;\n                opacity: .3;\n            }\n            .common {\n                left: 200px;\n                background-color: #3387F3;\n                opacity: .3;\n            }\n            .label-active {\n                opacity: 1;\n            }\n\n            .member-tag {\n                flex: 1;\n                min-height: 30px;\n                .el-tag {\n                    margin: 0 8px 8px 0;\n                    white-space: nowrap; // 防止文字换行\n                    overflow: hidden; // 隐藏超出容器的部分\n                    text-overflow: ellipsis; // 显示省略号\n                }\n\n            }\n        }\n\n        .member-add {\n            .member-input {\n                flex: 1;\n                display: flex;\n                justify-content: space-between;\n\n                /deep/.el-input__inner {\n                    height: 30px;\n                }\n            }\n        }\n\n        .gashapon-machine-allocation {\n            flex: 1;\n            display: flex;\n            justify-content: space-between;\n            margin-top: 50px;\n\n            .draw-block {\n                position: relative;\n                width: 38%;\n                text-align: center;\n\n                img {\n                    margin-top: 50px;\n                    width: 50%;\n                    aspect-ratio: 1 / 1;\n                }\n                .lucky-dom{\n                    padding: 5px 10px;\n                    font-size: 20px;\n                }\n\n                .draw-block-btn {\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                    position: absolute;\n                    left: 50%;\n                    top: 80%;\n                    transform: translate(-50%, -50%);\n                    width: 90%;\n                    text-align: center;\n                    color: #fff;\n\n                    .draw-block-btn-blue {\n                        border-radius: 4px;\n                        padding: 10px;\n                        flex: 1;\n                        background-color: #3387F3;\n                        margin-right: 5px;\n                        box-shadow: 0 4px 10px 0 #ebf5ff;\n                        cursor: pointer;\n                    }\n\n                    .draw-block-btn-red {\n                        border-radius: 4px;\n                        padding: 10px;\n                        flex: 1;\n                        margin-left: 5px;\n                        background-color: #E84D4D;\n                        box-shadow: 0 4px 10px 0 #F8D8D8;\n                        cursor: pointer;\n                    }\n                }\n            }\n\n            .team {\n                position: relative;\n                width: 30%;\n                padding: 10px;\n                display: flex;\n                flex-direction: column;\n                // justify-content: space-around;\n\n                .team-label {\n                    position: absolute;\n                    top: -28px;\n                    width: 80px;\n                    font-size: 14px;\n                    padding: 4px;\n                    color: #fff;\n                    text-align: center;\n                    border-radius: 4px 4px 0 0;\n                }\n\n                .team-content {\n                    padding: 10px 5px;\n                    border-radius: 4px;\n                    margin-bottom: 15px;\n\n                    .team-member {\n                        display: flex;\n\n                        i {\n                            width: 30px;\n                            font-size: 20px;\n                        }\n\n                        span {\n                            flex: 1;\n                            overflow: hidden;\n                            text-overflow: ellipsis;\n                            white-space: nowrap;\n                        }\n                    }\n                }\n            }\n\n            .blue-team {\n                border: 1px solid #3387F3;\n                border-radius: 0 4px 4px 4px;\n\n                .hand {\n                    position: absolute;\n                    right: 0;\n                    top: -20px;\n                    color: #3387F3;\n                    cursor: pointer;\n                }\n\n                .team-label {\n                    background-color: #3387F3;\n                    left: -1px !important;\n                }\n\n                .team-content {\n                    border: 1px solid #3387F3;\n\n                    .team-member {\n                        i {\n                            color: #3387F3;\n                        }\n                    }\n                }\n            }\n\n            .red-team {\n                border: 1px solid #E84D4D;\n                border-radius: 4px 0 4px 4px;\n\n                .hand {\n                    position: absolute;\n                    left: 0;\n                    top: -20px;\n                    color: #E84D4D;\n                    cursor: pointer;\n                }\n\n                .team-label {\n                    background-color: #E84D4D;\n                    right: -1px !important;\n                }\n\n                .team-content {\n                    border: 1px solid #E84D4D;\n\n                    .team-member {\n                        i {\n                            color: #E84D4D;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    .draw-dialog{\n        position: relative;\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: space-between;\n        width: 400px;\n        height: 330px;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        border: 1px solid #ccc;\n        border-radius: 8px;\n        background-color: #fff;\n        audio {\n            position: absolute;\n            opacity: 0;\n        }\n        // .draw-dialog-box {\n        // }\n    }\n}\n</style>\n<style lang=\"less\">\n.el-popover {\n    .hand-select {\n        .hand-select-content {\n            display: flex;\n            flex-wrap: wrap;\n            padding: 10px;\n\n            .hand-select-member {\n                padding: 5px 10px;\n                margin: 0 8px 8px 0;\n                border-radius: 4px;\n                cursor: pointer;\n            }\n\n            .hand-blue {\n                border: 1px solid #3387F3;\n            }\n\n            .hand-red {\n                border: 1px solid #E84D4D;\n            }\n\n            .hand-blue.hand-active {\n                background-color: #ebf5ff;\n                color: #3387F3;\n            }\n\n            .hand-red.hand-active {\n                background-color: #fbd8d9;\n                color: #E84D4D;\n            }\n        }\n    }\n}</style>"],"mappings":";;;;;;;;;;;;;;AA0GA;EACAA,IAAA,WAAAA,KAAA;IACA;MACAC,UAAA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MAAA,CACA;MACAC,UAAA;MACAC,YAAA;MACAC,UAAA;MACAC,QAAA;MACAC,OAAA;MACAC,eAAA;MACAC,UAAA;MACAC,QAAA;MACAC,OAAA;MACAC,IAAA;MACAC,IAAA;MACAC,YAAA;MACAC,kBAAA;MACAC,iBAAA;MACAC,YAAA;MACAC,YAAA;IACA;EACA;EACAC,QAAA;IACAC,UAAA,WAAAA,WAAA;MACA,YAAAlB,UAAA,CAAAmB,MAAA,WAAAC,IAAA;QACA,OAAAA,IAAA,CAAAC,IAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,WAAA,WAAAA,YAAAF,IAAA;MACA,IAAAG,KAAA;MACA,IAAAH,IAAA;QACAG,KAAA,QAAAxB,UAAA,CAAAyB,SAAA,WAAAL,IAAA;UACA,OAAAA,IAAA,CAAAM,EAAA;QACA;MACA,WAAAL,IAAA;QACAG,KAAA,QAAAxB,UAAA,CAAAyB,SAAA,WAAAL,IAAA;UACA,OAAAA,IAAA,CAAAM,EAAA;QACA;MACA;MACA,IAAAF,KAAA;MACA,KAAAR,YAAA,GAAAK,IAAA;IACA;IACAM,YAAA,WAAAA,aAAA;MACA,KAAA3B,UAAA,CAAA4B,IAAA;QACAC,IAAA,OAAA5B,UAAA;QACAoB,IAAA,OAAAL,YAAA,0BAAAA,YAAA;QACAU,EAAA,OAAAV,YAAA,6BAAAA,YAAA,4BAAAhB,UAAA,SAAAA,UAAA,CAAA8B,MAAA,QAAA9B,UAAA,MAAAA,UAAA,CAAA8B,MAAA,MAAAJ,EAAA;MACA;MACA,SAAAV,YAAA;QACA,KAAAZ,QAAA,CAAA2B,OAAA;UACAF,IAAA,OAAA5B,UAAA;UACAoB,IAAA;UACAK,EAAA;QACA;QACA,SAAArB,OAAA,CAAAoB,SAAA,WAAAL,IAAA;UAAA,OAAAA,IAAA,CAAAM,EAAA;QAAA;UACA,KAAAV,YAAA;QACA;UACA,KAAAA,YAAA;QACA;MACA,gBAAAA,YAAA;QACA,KAAAX,OAAA,CAAA0B,OAAA;UACAF,IAAA,OAAA5B,UAAA;UACAoB,IAAA;UACAK,EAAA;QACA;QACA,SAAAtB,QAAA,CAAAqB,SAAA,WAAAL,IAAA;UAAA,OAAAA,IAAA,CAAAM,EAAA;QAAA;UACA,KAAAV,YAAA;QACA;UACA,KAAAA,YAAA;QACA;MACA;MACA,KAAAgB,QAAA,CAAAC,OAAA,iBAAAC,MAAA,MAAAjC,UAAA;MACA,KAAAA,UAAA;IACA;IACAkC,WAAA,WAAAA,YAAAC,GAAA,EAAAZ,KAAA;MACA,KAAAQ,QAAA,CAAAC,OAAA,yCAAAC,MAAA,CAAAE,GAAA,CAAAP,IAAA;MACA,KAAA7B,UAAA,CAAAqC,MAAA,CAAAb,KAAA;MACA,KAAAY,GAAA,CAAAf,IAAA,IAAAe,GAAA,CAAAf,IAAA;QACAiB,OAAA,CAAAC,GAAA,MAAAnC,QAAA,CAAAqB,SAAA,WAAAe,IAAA;UAAA,OAAAA,IAAA,CAAAd,EAAA,KAAAU,GAAA,CAAAV,EAAA;QAAA;QACA,KAAAtB,QAAA,CAAAiC,MAAA,MAAAjC,QAAA,CAAAqB,SAAA,WAAAe,IAAA;UAAA,OAAAA,IAAA,CAAAd,EAAA,KAAAU,GAAA,CAAAV,EAAA;QAAA;MACA,WAAAU,GAAA,CAAAf,IAAA;QACA,KAAAhB,OAAA,CAAAgC,MAAA,MAAAhC,OAAA,CAAAoB,SAAA,WAAAgB,GAAA;UAAA,OAAAA,GAAA,CAAAf,EAAA,KAAAU,GAAA,CAAAV,EAAA;QAAA;MACA;IACA;IACAgB,YAAA,WAAAA,aAAAC,MAAA,EAAAC,QAAA;MACA,KAAAD,MAAA;MACA,IAAAC,QAAA;QACA,KAAAxC,QAAA,CAAAwB,IAAA;UACAC,IAAA,EAAAc,MAAA,CAAAd,IAAA;UACAR,IAAA,EAAAuB,QAAA;UACAlB,EAAA,EAAAiB,MAAA,CAAAjB;QACA;MACA,WAAAkB,QAAA;QACA,KAAAvC,OAAA,CAAAuB,IAAA;UACAC,IAAA,EAAAc,MAAA,CAAAd,IAAA;UACAR,IAAA,EAAAuB,QAAA;UACAlB,EAAA,EAAAiB,MAAA,CAAAjB;QACA;MACA;MACA,KAAA1B,UAAA,CAAA6C,OAAA,WAAAzB,IAAA;QACA,IAAAA,IAAA,CAAAS,IAAA,KAAAc,MAAA,CAAAd,IAAA;UACAT,IAAA,CAAAC,IAAA,GAAAuB,QAAA;QACA;MACA;MACA,KAAAZ,QAAA,CAAAC,OAAA;IACA;IACAa,OAAA,WAAAA,QAAA;MACA,IAAAC,SAAA,QAAA/C,UAAA,CAAAyB,SAAA,WAAAL,IAAA;QACA,OAAAA,IAAA,CAAAM,EAAA;MACA;MACA,IAAAsB,QAAA,QAAAhD,UAAA,CAAAyB,SAAA,WAAAL,IAAA;QACA,OAAAA,IAAA,CAAAM,EAAA;MACA;MACA,KAAAtB,QAAA,IACA;QACAyB,IAAA,OAAA7B,UAAA,CAAA+C,SAAA,EAAAlB,IAAA;QACAR,IAAA;QACAK,EAAA;MACA,EACA;MACA,KAAArB,OAAA,IACA;QACAwB,IAAA,OAAA7B,UAAA,CAAAgD,QAAA,EAAAnB,IAAA;QACAR,IAAA;QACAK,EAAA;MACA,EACA;MACA,KAAA1B,UAAA,CAAA6C,OAAA,WAAAzB,IAAA;QACA,IAAAA,IAAA,CAAAM,EAAA,qBAAAN,IAAA,CAAAM,EAAA;UACAN,IAAA,CAAAC,IAAA;QACA;MACA;MACA,KAAAW,QAAA,CAAAC,OAAA;IACA;IACAgB,KAAA,WAAAA,MAAAL,QAAA;MAAA,IAAAM,KAAA;MACA,UAAAxC,IAAA;MACA,SAAAK,YAAA;MACA,SAAAf,UAAA,CAAAmB,MAAA,WAAAC,IAAA;QAAA,OAAAA,IAAA,CAAAC,IAAA;MAAA,GAAAS,MAAA;QACA,KAAAE,QAAA,CAAAmB,OAAA;QACA;MACA;MACA,IAAAC,CAAA;MACA,SAAApD,UAAA,CAAAmB,MAAA,WAAAC,IAAA;QAAA,OAAAA,IAAA,CAAAC,IAAA;MAAA,GAAAS,MAAA,QAAAsB,CAAA;MACA,KAAA9C,eAAA,GAAAsC,QAAA;MACA,KAAAlC,IAAA;MACA,IAAA2C,GAAA,YAAAA,GAAA;QACA;QACA;QACA,IAAAC,SAAA,GAAAJ,KAAA,CAAAlD,UAAA,CAAAmB,MAAA,WAAAC,IAAA;UAAA,OAAAA,IAAA,CAAAC,IAAA;QAAA;QACA,IAAAkC,MAAA,GAAAC,QAAA,CAAAC,IAAA,CAAAF,MAAA,KAAAD,SAAA,CAAAxB,MAAA;QACA;QACAoB,KAAA,CAAA1C,QAAA,GAAA8C,SAAA,CAAAC,MAAA,EAAA1B,IAAA;QACA;QACAqB,KAAA,CAAAzC,OAAA,GAAAiD,UAAA,CAAAL,GAAA,EAAAH,KAAA,CAAAvC,IAAA;MACA;MACA,KAAAF,OAAA,GAAAiD,UAAA,CAAAL,GAAA,OAAA1C,IAAA;;MAEA;MACA+C,UAAA;QACA;QACAR,KAAA,CAAAS,IAAA,CAAAf,QAAA,EAAAQ,CAAA;MACA,GAAAA,CAAA;IACA;IACAO,IAAA,WAAAA,KAAAf,QAAA,EAAAQ,CAAA;MAAA,IAAAQ,MAAA;MACA;MACA,IAAAC,MAAA,GAAAC,WAAA;QACAF,MAAA,CAAAjD,IAAA;MACA;MACA;MACA+C,UAAA;QACAE,MAAA,CAAAlD,IAAA;QACAqD,aAAA,CAAAH,MAAA,CAAAnD,OAAA;QACA;QACAsD,aAAA,CAAAF,MAAA;QACA;QACAD,MAAA,CAAAjD,IAAA;;QAEA;QACAiD,MAAA,CAAA5D,UAAA,CAAA6C,OAAA,WAAAzB,IAAA;UACA,IAAAA,IAAA,CAAAS,IAAA,KAAA+B,MAAA,CAAApD,QAAA;YACAY,IAAA,CAAAC,IAAA,GAAAuB,QAAA;YACA,IAAAA,QAAA;cACAgB,MAAA,CAAAxD,QAAA,CAAAwB,IAAA;gBACAC,IAAA,EAAAT,IAAA,CAAAS,IAAA;gBACAR,IAAA,EAAAuB,QAAA;gBACAlB,EAAA,EAAAN,IAAA,CAAAM;cACA;YACA,WAAAkB,QAAA;cACAgB,MAAA,CAAAvD,OAAA,CAAAuB,IAAA;gBACAC,IAAA,EAAAT,IAAA,CAAAS,IAAA;gBACAR,IAAA,EAAAuB,QAAA;gBACAlB,EAAA,EAAAN,IAAA,CAAAM;cACA;YACA;UACA;QACA;QACAkC,MAAA,CAAA7C,YAAA;QACA2C,UAAA;UACAE,MAAA,CAAA7C,YAAA;QACA;MACA,GAAAqC,CAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}